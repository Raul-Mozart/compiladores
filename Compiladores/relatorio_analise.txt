================================================================================
📋 RELATÓRIO DE ANÁLISE LÉXICA
================================================================================
📁 Arquivo: codigo_exemplo.txt
📊 Total de tokens: 316
📝 Linhas de código: 50

📈 ESTATÍSTICAS POR TIPO DE TOKEN:
--------------------------------------------------
  ARITHOP        :   12 ocorrências
  ASSIGN         :    2 ocorrências
  COLON          :    2 ocorrências
  COMMA          :    8 ocorrências
  DOT            :    5 ocorrências
  IDENTIFIER     :  131 ocorrências
  INT_LITERAL    :   20 ocorrências
  LBRACE         :   10 ocorrências
  LBRACKET       :    1 ocorrências
  LPAREN         :   10 ocorrências
  NEWLINE        :   49 ocorrências
  RBRACE         :   10 ocorrências
  RBRACKET       :    1 ocorrências
  RELOP          :    3 ocorrências
  RPAREN         :   10 ocorrências
  SEMICOLON      :   20 ocorrências
  UNKNOWN        :   22 ocorrências

🔍 TOKENS ENCONTRADOS:
--------------------------------------------------
LINHA  COL TIPO            LEXEME
--------------------------------------------------
    1    1 ARITHOP         /
    1    2 ARITHOP         /
    1    4 IDENTIFIER      PROGRAMA
    1   13 IDENTIFIER      DE
    1   16 IDENTIFIER      EXEMPLO
    1   24 ARITHOP         -
    1   26 IDENTIFIER      Linguagem
    1   36 IDENTIFIER      Proposta
    1   44 NEWLINE         \n
    2    1 ARITHOP         /
    2    2 ARITHOP         /
    2    4 IDENTIFIER      Testando
    2   13 IDENTIFIER      todos
    2   19 IDENTIFIER      os
    2   22 IDENTIFIER      tipos
    2   28 IDENTIFIER      de
    2   31 IDENTIFIER      tokens
    2   37 NEWLINE         \n
    3    1 NEWLINE         \n
    4    1 IDENTIFIER      var
    4    5 IDENTIFIER      int
    4    9 IDENTIFIER      idade
    4   15 IDENTIFIER      as
    4   18 INT_LITERAL     25
    4   20 SEMICOLON       ;
    4   21 NEWLINE         \n
    5    1 IDENTIFIER      var
    5    5 IDENTIFIER      float
    5   11 IDENTIFIER      altura
    5   18 IDENTIFIER      as
    5   21 INT_LITERAL     1
    5   22 DOT             .
    5   23 INT_LITERAL     75
    5   25 SEMICOLON       ;
    5   26 NEWLINE         \n
    6    1 IDENTIFIER      var
    6    5 IDENTIFIER      string
    6   12 IDENTIFIER      nome
    6   17 IDENTIFIER      as
    6   20 UNKNOWN         "
    6   21 IDENTIFIER      Jo
    6   23 UNKNOWN         ã
    6   24 IDENTIFIER      o
    6   26 IDENTIFIER      Silva
    6   31 UNKNOWN         "
    6   32 SEMICOLON       ;
    6   33 NEWLINE         \n
    7    1 IDENTIFIER      var
    7    5 IDENTIFIER      bool
    7   10 IDENTIFIER      ativo
    7   16 IDENTIFIER      as
    7   19 IDENTIFIER      true
    7   23 SEMICOLON       ;
    7   24 NEWLINE         \n
    8    1 IDENTIFIER      var
    8    5 IDENTIFIER      list
    8   10 IDENTIFIER      numeros
    8   18 IDENTIFIER      as
    8   21 LBRACKET        [
    8   22 INT_LITERAL     1
    8   23 COMMA           ,
    8   25 INT_LITERAL     2
    8   26 COMMA           ,
    8   28 INT_LITERAL     3
    8   29 COMMA           ,
    8   31 INT_LITERAL     4
    8   32 COMMA           ,
    8   34 INT_LITERAL     5
    8   35 RBRACKET        ]
    8   36 SEMICOLON       ;
    8   37 NEWLINE         \n
    9    1 NEWLINE         \n
   10    1 IDENTIFIER      function
   10   10 IDENTIFIER      string
   10   17 IDENTIFIER      verificarIdade
   10   31 LPAREN          (
   10   32 IDENTIFIER      idade
   10   37 RPAREN          )
   10   39 LBRACE          {
   10   40 NEWLINE         \n
   11    5 IDENTIFIER      if
   11    8 LPAREN          (
   11    9 IDENTIFIER      idade
   11   15 RELOP           >=
   11   18 INT_LITERAL     18
   11   20 RPAREN          )
   11   22 LBRACE          {
   11   23 NEWLINE         \n
   12    9 IDENTIFIER      return
   12   16 UNKNOWN         "
   12   17 IDENTIFIER      Maior
   12   23 IDENTIFIER      de
   12   26 IDENTIFIER      idade
   12   31 UNKNOWN         "
   12   32 SEMICOLON       ;
   12   33 NEWLINE         \n
   13    5 RBRACE          }
   13    7 IDENTIFIER      else
   13   12 IDENTIFIER      if
   13   15 LPAREN          (
   13   16 IDENTIFIER      idade
   13   22 RELOP           >=
   13   25 INT_LITERAL     13
   13   27 RPAREN          )
   13   29 LBRACE          {
   13   30 NEWLINE         \n
   14    9 IDENTIFIER      return
   14   16 UNKNOWN         "
   14   17 IDENTIFIER      Adolescente
   14   28 UNKNOWN         "
   14   29 SEMICOLON       ;
   14   32 NEWLINE         \n
   15    5 RBRACE          }
   15    7 IDENTIFIER      else
   15   12 LBRACE          {
   15   13 NEWLINE         \n
   16    9 IDENTIFIER      return
   16   16 UNKNOWN         "
   16   17 IDENTIFIER      Crian
   16   22 UNKNOWN         ç
   16   23 IDENTIFIER      a
   16   24 UNKNOWN         "
   16   25 SEMICOLON       ;
   16   26 NEWLINE         \n
   17    5 RBRACE          }
   17    6 NEWLINE         \n
   18    1 RBRACE          }
   18    2 NEWLINE         \n
   19    1 NEWLINE         \n
   20    1 IDENTIFIER      function
   20   10 IDENTIFIER      float
   20   16 IDENTIFIER      calcularMedia
   20   29 LPAREN          (
   20   30 IDENTIFIER      a
   20   31 COMMA           ,
   20   33 IDENTIFIER      b
   20   34 COMMA           ,
   20   36 IDENTIFIER      c
   20   37 RPAREN          )
   20   39 LBRACE          {
   20   40 NEWLINE         \n
   21    5 IDENTIFIER      var
   21    9 IDENTIFIER      float
   21   15 IDENTIFIER      soma
   21   20 IDENTIFIER      as
   21   23 IDENTIFIER      a
   21   25 ARITHOP         +
   21   27 IDENTIFIER      b
   21   29 ARITHOP         +
   21   31 IDENTIFIER      c
   21   32 SEMICOLON       ;
   21   33 NEWLINE         \n
   22    5 IDENTIFIER      var
   22    9 IDENTIFIER      float
   22   15 IDENTIFIER      media
   22   21 IDENTIFIER      as
   22   24 IDENTIFIER      soma
   22   29 ARITHOP         /
   22   31 INT_LITERAL     3
   22   32 DOT             .
   22   33 INT_LITERAL     0
   22   34 SEMICOLON       ;
   22   35 NEWLINE         \n
   23    5 IDENTIFIER      return
   23   12 IDENTIFIER      media
   23   17 SEMICOLON       ;
   23   18 NEWLINE         \n
   24    1 RBRACE          }
   24    2 NEWLINE         \n
   25    1 NEWLINE         \n
   26    1 IDENTIFIER      class
   26    7 IDENTIFIER      Pessoa
   26   14 LBRACE          {
   26   15 NEWLINE         \n
   27    5 IDENTIFIER      var
   27    9 IDENTIFIER      string
   27   16 IDENTIFIER      nome
   27   21 IDENTIFIER      as
   27   24 UNKNOWN         "
   27   25 UNKNOWN         "
   27   26 SEMICOLON       ;
   27   27 NEWLINE         \n
   28    5 IDENTIFIER      var
   28    9 IDENTIFIER      int
   28   13 IDENTIFIER      idade
   28   19 IDENTIFIER      as
   28   22 INT_LITERAL     0
   28   23 SEMICOLON       ;
   28   24 NEWLINE         \n
   29    5 NEWLINE         \n
   30    5 IDENTIFIER      function
   30   14 IDENTIFIER      void
   30   19 IDENTIFIER      setNome
   30   26 LPAREN          (
   30   27 IDENTIFIER      novoNome
   30   35 RPAREN          )
   30   37 LBRACE          {
   30   38 NEWLINE         \n
   31    9 IDENTIFIER      nome
   31   14 ASSIGN          =
   31   16 IDENTIFIER      novoNome
   31   24 SEMICOLON       ;
   31   25 NEWLINE         \n
   32    5 RBRACE          }
   32    6 NEWLINE         \n
   33    1 RBRACE          }
   33    2 NEWLINE         \n
   34    1 IDENTIFIER      return
   34    7 NEWLINE         \n
   35    1 NEWLINE         \n
   36    1 ARITHOP         /
   36    2 ARITHOP         /
   36    4 IDENTIFIER      Programa
   36   13 IDENTIFIER      principal
   36   22 NEWLINE         \n
   37    1 IDENTIFIER      var
   37    5 IDENTIFIER      int
   37    9 IDENTIFIER      numeroA
   37   17 IDENTIFIER      as
   37   20 INT_LITERAL     10
   37   22 SEMICOLON       ;
   37   23 NEWLINE         \n
   38    1 IDENTIFIER      var
   38    5 IDENTIFIER      int
   38    9 IDENTIFIER      numeroB
   38   17 IDENTIFIER      as
   38   20 INT_LITERAL     20
   38   22 SEMICOLON       ;
   38   24 NEWLINE         \n
   39    1 IDENTIFIER      var
   39    5 IDENTIFIER      float
   39   11 IDENTIFIER      resultado
   39   21 IDENTIFIER      as
   39   24 IDENTIFIER      calcularMedia
   39   37 LPAREN          (
   39   38 IDENTIFIER      numeroA
   39   45 COMMA           ,
   39   47 IDENTIFIER      numeroB
   39   54 COMMA           ,
   39   56 INT_LITERAL     15
   39   58 RPAREN          )
   39   59 SEMICOLON       ;
   39   60 NEWLINE         \n
   40    1 NEWLINE         \n
   41    1 IDENTIFIER      if
   41    4 LPAREN          (
   41    5 IDENTIFIER      resultado
   41   15 RELOP           >
   41   17 INT_LITERAL     15
   41   19 DOT             .
   41   20 INT_LITERAL     0
   41   22 IDENTIFIER      and
   41   26 IDENTIFIER      numeroA
   41   34 UNKNOWN         !
   41   35 ASSIGN          =
   41   37 IDENTIFIER      numeroB
   41   44 RPAREN          )
   41   46 LBRACE          {
   41   47 NEWLINE         \n
   42    5 IDENTIFIER      print
   42   10 LPAREN          (
   42   11 UNKNOWN         "
   42   12 IDENTIFIER      Resultado
   42   22 IDENTIFIER      v
   42   23 UNKNOWN         á
   42   24 IDENTIFIER      lido
   42   28 COLON           :
   42   30 UNKNOWN         "
   42   32 ARITHOP         +
   42   34 IDENTIFIER      resultado
   42   43 RPAREN          )
   42   44 SEMICOLON       ;
   42   45 NEWLINE         \n
   43    1 RBRACE          }
   43    3 IDENTIFIER      else
   43    8 LBRACE          {
   43    9 NEWLINE         \n
   44    5 IDENTIFIER      print
   44   10 LPAREN          (
   44   11 UNKNOWN         "
   44   12 IDENTIFIER      Resultado
   44   22 IDENTIFIER      inv
   44   25 UNKNOWN         á
   44   26 IDENTIFIER      lido
   44   30 UNKNOWN         "
   44   31 RPAREN          )
   44   32 SEMICOLON       ;
   44   33 NEWLINE         \n
   45    1 RBRACE          }
   45    2 NEWLINE         \n
   46    1 NEWLINE         \n
   47    1 IDENTIFIER      for
   47    5 IDENTIFIER      int
   47    9 IDENTIFIER      i
   47   11 IDENTIFIER      in
   47   14 INT_LITERAL     1
   47   16 DOT             .
   47   17 DOT             .
   47   19 INT_LITERAL     5
   47   21 LBRACE          {
   47   22 NEWLINE         \n
   48    5 IDENTIFIER      print
   48   10 LPAREN          (
   48   11 UNKNOWN         "
   48   12 IDENTIFIER      N
   48   13 UNKNOWN         ú
   48   14 IDENTIFIER      mero
   48   18 COLON           :
   48   20 UNKNOWN         "
   48   22 ARITHOP         +
   48   24 IDENTIFIER      i
   48   25 RPAREN          )
   48   26 SEMICOLON       ;
   48   27 NEWLINE         \n
   49    1 RBRACE          }
   49    2 NEWLINE         \n